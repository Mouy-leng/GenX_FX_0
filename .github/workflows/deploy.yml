name: Build and Deploy GenX_FX

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH to MCP server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.MCP_HOST }}
          username: ${{ secrets.MCP_USER }}
          key: ${{ secrets.MCP_SSH_KEY }}
          script: |
            set -e
            export IMAGE=ghcr.io/${{ github.repository }}:sha-${{ github.sha }}
            echo "Pulling $IMAGE"
            docker pull $IMAGE
            cd /opt/genx_fx || mkdir -p /opt/genx_fx && cd /opt/genx_fx
            echo "Updating .env"
            cat > .env <<'EOF'
            ${ENV_FILE}
            EOF
            echo "Writing compose"
            cat > docker-compose.yml <<'YML'
            version: '3.8'
            services:
              api:
                image: $IMAGE
                ports:
                  - "8000:8000"
                env_file:
                  - .env
                depends_on:
                  - postgres
                  - redis
              postgres:
                image: postgres:15-alpine
                environment:
                  - POSTGRES_USER=genx_user
                  - POSTGRES_PASSWORD=${DB_PASSWORD}
                  - POSTGRES_DB=genx_trading
                volumes:
                  - pg_data:/var/lib/postgresql/data
                ports:
                  - "5432:5432"
              redis:
                image: redis:7-alpine
                command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
                ports:
                  - "6379:6379"
            volumes:
              pg_data:
            YML
            echo "Starting services"
            docker compose up -d

        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
