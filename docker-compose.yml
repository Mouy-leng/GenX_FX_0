version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=postgres
      - REDIS_HOST=redis
      - POSTGRES_USER=${POSTGRES_USER:-genx}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-genx_trading}
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-genx}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-genx_trading}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  discord_bot:
    build:
      context: .
      dockerfile: Dockerfile
    command: python services/discord_bot.py
    env_file:
      - .env
    volumes:
      - .:/app

  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile
    command: python services/telegram_bot.py
    env_file:
      - .env
    volumes:
      - .:/app

  notifier:
    build:
      context: .
      dockerfile: Dockerfile
    command: python services/notifier.py
    env_file:
      - .env
    volumes:
      - .:/app

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    command: python services/scheduler.py
    env_file:
      - .env
    volumes:
      - .:/app

  websocket_feed:
    build:
      context: .
      dockerfile: Dockerfile
    command: python services/websocket_feed.py
    env_file:
      - .env
    volumes:
      - .:/app

volumes:
  postgres_data: